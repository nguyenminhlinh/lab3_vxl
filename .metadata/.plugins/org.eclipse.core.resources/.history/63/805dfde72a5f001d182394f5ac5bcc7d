/*
 * fsm_automatic.c
 *
 *  Created on: Nov 7, 2022
 *      Author: minhl
 */

#include "fsm_automatic.h"
	void fsm_automatic_run(){
		switch(status1){
		case INIT:
			HAL_GPIO_WritePin(R1_GPIO_Port,R1_Pin,1);
			HAL_GPIO_WritePin(Y1_GPIO_Port,Y1_Pin,1);
			HAL_GPIO_WritePin(G1_GPIO_Port,G1_Pin,1);
			status1 = AUTO_RED;
			setTimer1(timer_red);
			countdown1=timer_red;
			timer5_flag=1;
			break;
		case AUTO_RED:
			if(timer5_flag == 1){
				countdown1--;
				setTimer5(1000);
		    }
			HAL_GPIO_WritePin(R1_GPIO_Port,R1_Pin,0);
			HAL_GPIO_WritePin(Y1_GPIO_Port,Y1_Pin,1);
			HAL_GPIO_WritePin(G1_GPIO_Port,G1_Pin,1);
			if(timer1_flag == 1){
				status1 = AUTO_GREEN;
				setTimer1(timer_green);
				countdown1=timer_green;
			}
			if(isButton1Pressed()== 1){
				start();
				status1 = MAN_RED;
				count=timer_red;
				setTimer2(500);
			}
			break;

		case AUTO_GREEN:
			if(timer5_flag == 1){
				countdown1--;
				setTimer5(1000);
			}
			HAL_GPIO_WritePin(R1_GPIO_Port,R1_Pin,1);
			HAL_GPIO_WritePin(Y1_GPIO_Port,Y1_Pin,1);
			HAL_GPIO_WritePin(G1_GPIO_Port,G1_Pin,0);
			if(timer1_flag==1){
				status1 = AUTO_YELLOW;
				setTimer1(timer_yellow);
				countdown1=timer_yellow;
			}
			if(isButton1Pressed()== 1){
				start();
				status1 = MAN_RED;
				count=timer_red;
				setTimer2(500);
			}
			break;
		case AUTO_YELLOW:
			if(timer5_flag == 1){
							countdown1--;
							setTimer5(1000);
					    }
			HAL_GPIO_WritePin(R1_GPIO_Port,R1_Pin,1);
			HAL_GPIO_WritePin(Y1_GPIO_Port,Y1_Pin,0);
			HAL_GPIO_WritePin(G1_GPIO_Port,G1_Pin,1);
			if(timer1_flag == 1){
				status1 = AUTO_RED;
				setTimer1(timer_red);
				countdown1=timer_red;
			}
			if(isButton1Pressed()== 1){
				start();
				status1 = MAN_RED;
				count=timer_red;
				setTimer2(500);
			}
			break;
		default:
			break;
		}

		if(status1==INIT||status1==AUTO_RED||status1==AUTO_GREEN||status1==AUTO_YELLOW)
		{
		switch(status2){
		case INIT:
			HAL_GPIO_WritePin(R2_GPIO_Port,R2_Pin,1);
			HAL_GPIO_WritePin(Y2_GPIO_Port,Y2_Pin,1);
			HAL_GPIO_WritePin(G2_GPIO_Port,G2_Pin,1);
			status2 = AUTO_GREEN;
			setTimer3(timer_green);
			countdown2=timer_green;
			timer2_flag=1;
			break;
		case AUTO_RED:
			if(timer2_flag == 1){
													countdown2--;
													setTimer2(1000);
											    }
			HAL_GPIO_WritePin(R2_GPIO_Port,R2_Pin,0);
			HAL_GPIO_WritePin(Y2_GPIO_Port,Y2_Pin,1);
			HAL_GPIO_WritePin(G2_GPIO_Port,G2_Pin,1);
			if(timer3_flag == 1){
				status2 = AUTO_GREEN;
				setTimer3(timer_green);
				countdown2=timer_green;
			}
			if(isButton1Pressed()== 1){
				start();
				status1 = MAN_RED;
				status2 = MAN_RED;
				count=timer_red;
				setTimer2(500);
			}
			break;

		case AUTO_GREEN:
			if(timer2_flag == 1){
													countdown2--;
													setTimer2(1000);
											    }
			HAL_GPIO_WritePin(R2_GPIO_Port,R2_Pin,1);
			HAL_GPIO_WritePin(Y2_GPIO_Port,Y2_Pin,1);
			HAL_GPIO_WritePin(G2_GPIO_Port,G2_Pin,0);
			if(timer3_flag==1){
				status2 = AUTO_YELLOW;
				setTimer3(timer_yellow);
				countdown2=timer_yellow;
			}
			if(isButton1Pressed()== 1){
				start();
				status2 = MAN_RED;
				status1 = MAN_RED;
				count=timer_red;
				setTimer2(500);
			}
			break;
		case AUTO_YELLOW:
			if(timer2_flag == 1){
													countdown2--;
													setTimer2(1000);
											    }
			HAL_GPIO_WritePin(R2_GPIO_Port,R2_Pin,1);
			HAL_GPIO_WritePin(Y2_GPIO_Port,Y2_Pin,0);
			HAL_GPIO_WritePin(G2_GPIO_Port,G2_Pin,1);
			if(timer3_flag == 1){
				status2 = AUTO_RED;
				setTimer3(timer_red);
				countdown2=timer_red;
			}
			if(isButton1Pressed()== 1){
				start();
				status2 = MAN_RED;
				status1 = MAN_RED;
				count=timer_red;
				setTimer2(500);
			}
			break;
		default:
			break;
		}
		updateClockBuffer();
		}

	}

